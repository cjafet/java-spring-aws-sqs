name: Deploy AWS Academy - EKS

on:
  workflow_run:
    workflows: ["Java CI with Gradle"]
    types:
      - completed

env:
  REGION_DEFAULT: "us-east-1"
  CLUSTER_NAME: "frameFlow-eks-cluster"

jobs:
  deploy:
    name: Deploy AWS Academy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-session-token: ${{ secrets.AWS_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update Kube Config
        run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.REGION_DEFAULT }}

      - name: Package & Tag
        run: | 
          docker compose -f Docker/docker-compose.yml build web --no-cache
          docker tag upload-frame-flow:latest 090111931170.dkr.ecr.us-east-1.amazonaws.com/upload-frame-flow:latest
          docker ps

      - name: Push to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 090111931170.dkr.ecr.us-east-1.amazonaws.com
          docker push 090111931170.dkr.ecr.us-east-1.amazonaws.com/upload-frame-flow:latest

      - name: Kube Secrets
        if: ${{ github.ref_name == 'master' }} && github.event_name == 'push'
        run: |
         kubectl delete secret secret-frameflow-upload --ignore-not-found
         kubectl create secret generic secret-frameflow-upload \
            --from-literal=AWS_KEY="${{ secrets.AWS_KEY }}" \
            --from-literal=AWS_SECRET="${{ secrets.AWS_SECRET }}" \
            --from-literal=AWS_TOKEN="${{ secrets.AWS_TOKEN }}" \
            --from-literal=ACCOUNT_ID="${{ secrets.ACCOUNT_ID }}" \
            --from-literal=AWS_REGION="${{ secrets.AWS_REGION }}" \
            --from-literal=SNS_TOPIC="${{ secrets.SNS_TOPIC }}" \
            --from-literal=SQS_QUEUE=${{ secrets.SQS_QUEUE }} \
            --from-literal=S3_BUCKET_ZIP=${{ secrets.S3_BUCKET_ZIP }} \
            --from-literal=S3_BUCKET_VIDEO=${{ secrets.S3_BUCKET_VIDEO }}

      - name: Kube Apply
        if: ${{ github.ref_name == 'master' }} && github.event_name == 'push'
        run: |
          kubectl delete -f k8s/metrics.yaml --ignore-not-found
          kubectl apply -f k8s/deployment-upload-frame-flow.yaml
          kubectl apply -f k8s/service-frame-flow.yaml
          kubectl apply -f k8s/hpa-frame-flow.yaml
