plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.sonarqube' version '6.0.1.5171'
	id 'jacoco'
}

group = 'com.message'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
	sonarOrganization = "frame-flow"
	sonarProjectKey = "upload_frame_flow"
	sonarHostUrl = "https://sonarcloud.io/"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation("org.springframework.boot:spring-boot-starter-security:3.4.2")
	implementation 'org.springframework.boot:spring-boot-starter-actuator:3.3.4'
	// JJWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	implementation 'com.google.code.gson:gson:2.12.1'

	implementation 'org.json:json:20231013'
	implementation 'com.auth0:java-jwt:3.15.0'

	// Spring Cloud AWS
	implementation platform('io.awspring.cloud:spring-cloud-aws-dependencies:3.2.1')
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.3.0'
	implementation 'io.awspring.cloud:spring-cloud-aws-starter-sqs:3.3.0'
	implementation 'software.amazon.awssdk:sns'
	implementation 'com.amazonaws:aws-java-sdk-sns:1.12.196'


	// ModelMapper
	implementation 'org.modelmapper:modelmapper:3.2.0'

	// Logging
	implementation 'net.logstash.logback:logstash-logback-encoder:8.0'

	// Swagger for API documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.projectlombok:lombok:1.18.36'

	// Database
	implementation 'org.postgresql:postgresql'

	// Test Dependencies
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
	testImplementation 'org.mockito:mockito-core:5.7.0'
	testImplementation 'org.mockito:mockito-inline:5.2.0'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
	testImplementation 'org.testcontainers:localstack:1.19.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

sonarqube {
	properties {
		property "sonar.projectKey", "upload_frame_flow"
		property "sonar.organization", "frame-flow"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.login", "bb0d141b086a1e6cfb9081aef877a4550423a826"
		property "sonar.exclusions",
			"**/core/**/," +
			"**/api/**/," +
			"**/dto/**/," +
			"**/handlers/**/," +
			"**/configuration/**/"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

tasks.named('jacocoTestReport') {
	reports {
		xml.required = true
		html.required = true
		csv.required = true
	}
}